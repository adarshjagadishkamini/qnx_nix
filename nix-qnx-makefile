# QNX compiler and flags
QCC = qcc
# Debug build flags
DEBUG_FLAGS = -g3 -O0 -DDEBUG
# Release build flags
RELEASE_FLAGS = -O2 -DNDEBUG

# Default to release build
EXTRA_FLAGS ?= $(RELEASE_FLAGS)

# Base flags
CFLAGS = -Vgcc_ntoaarch64le -Wall -Wno-parentheses $(EXTRA_FLAGS) -I$(QNX_TARGET)/usr/include -I.
LDFLAGS = -lsocket
INCLUDES = -I$(QNX_TARGET)/usr/include -I.

# Source files and targets
BINS = nix-store nix-shell-qnx
SOURCES = sha256.c nix_store.c nix_store_db.c nix_gc.c main.c nix_shell.c
OBJECTS = $(SOURCES:.c=.o)

# Default target
all: $(BINS)

# Link the executables
nix-store: $(filter-out nix_shell.o,$(OBJECTS))
	$(QCC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

nix-shell-qnx: nix_shell.o nix_store.o sha256.o nix_store_db.o
	$(QCC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# Compile source files
%.o: %.c
	$(QCC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Clean the build
clean:
	rm -f $(OBJECTS) $(BINS)

# Install the executables
install: $(BINS)
	cp nix-store $(QNX_TARGET)/usr/bin/
	cp nix-shell-qnx $(QNX_TARGET)/usr/bin/
	mkdir -p $(QNX_TARGET)/etc/nix-store
	cp config.ini $(QNX_TARGET)/etc/nix-store/

# Package for deployment
package: $(BINS)
	mkdir -p pkg/usr/bin
	mkdir -p pkg/etc/nix-store
	cp nix-store pkg/usr/bin/
	cp nix-shell-qnx pkg/usr/bin/
	cp config.ini pkg/etc/nix-store/
	mkifs -v -r ./pkg nix-store.ifs

# Add debug target
debug: EXTRA_FLAGS = $(DEBUG_FLAGS)
debug: all

# Add valgrind target
valgrind-test: debug
	valgrind --leak-check=full \
		--show-leak-kinds=all \
		--track-origins=yes \
		--verbose \
		--log-file=valgrind-out.txt \
		./nix-store --init

# Add more specific valgrind test targets
valgrind-store-test: debug
	valgrind --leak-check=full \
		--show-leak-kinds=all \
		--track-origins=yes \
		--verbose \
		--log-file=valgrind-store-out.txt \
		./full_system_test.sh

.PHONY: all clean install package debug valgrind-test valgrind-store-test